buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

jar {
    manifest {
        attributes 'Main-Class': 'takarivi.bibtex.App'
    }
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url 'https://repo.spring.io/libs-snapshot'		
	}
}

project.ext {
    cucumberVersion = "1.2.5"
    junitVersion = "4.12"
    seleniumVersion = "3.4.0"
}

run {
	standardInput = System.in
}

bootRun {
	addResources = true
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'takarivi.bibtex.Main'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.security:spring-security-web:4.2.3.BUILD-SNAPSHOT')
	compile('org.postgresql:postgresql:9.4-1201-jdbc4')
	compile('org.apache.commons:commons-dbcp2:2.0')
    	compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: seleniumVersion
    	compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: seleniumVersion
    	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    	compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumVersion
    	compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: seleniumVersion
    	//testCompile("io.github.bonigarcia:webdrivermanager:1.6.2") {
        //	exclude group: 'org.seleniumhq.selenium'
	//}
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'junit:junit:4.12'
    	testCompile 'info.cukes:cucumber-java:1.2.5'
    	testCompile 'info.cukes:cucumber-junit:1.2.5'
        testCompile 'org.mockito:mockito-core:2.7.21'
}

test {
    testLogging.showStandardStreams = true
}

task(debug, dependsOn: 'classes', type: JavaExec)
{
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
    debug = true
}

task( browse, dependsOn: 'classes', type: JavaExec ) {
    main = 'takarivi.bibtex.App'
    classpath = sourceSets.main.runtimeClasspath
}

task(stage, dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/lib"
	from(configurations.compile)
}
stage.dependsOn(copyToLib)

mainClassName = 'takarivi.bibtex.App'
